<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记网站</title>
    <link>https://borongcheng.github.io/static/</link>
    <description>Recent content on 笔记网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>私有财产</copyright>
    <lastBuildDate>Sun, 25 Oct 2015 08:36:54 -0700</lastBuildDate>
    <atom:link href="https://borongcheng.github.io/static/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GeoHash</title>
      <link>https://borongcheng.github.io/static/posts/geohash/</link>
      <pubDate>Sun, 25 Oct 2015 08:36:54 -0700</pubDate>
      <guid>https://borongcheng.github.io/static/posts/geohash/</guid>
      <description>GeoHash 一、定义 ​ 通常我们用经度纬度两个二维坐标点来精准表示一个位置，如果我们需要按位置范围查找，这样就得用遍历的形式，效率不高，所以引入了Geo</description>
    </item>
    <item>
      <title>Gradle</title>
      <link>https://borongcheng.github.io/static/tags/gradle/</link>
      <pubDate>Sun, 25 Oct 2015 08:36:54 -0700</pubDate>
      <guid>https://borongcheng.github.io/static/tags/gradle/</guid>
      <description>Gradle 一、概述 ​ java是一门世界级主流编程语言，有一款高效易用的项目管理工具是java开发者共同追求的心愿和目标。 先是2000年的Ant，后有</description>
    </item>
    <item>
      <title>Spring AOP 详解</title>
      <link>https://borongcheng.github.io/static/categories/aop%E5%88%87%E9%9D%A2/</link>
      <pubDate>Sun, 25 Oct 2015 08:36:54 -0700</pubDate>
      <guid>https://borongcheng.github.io/static/categories/aop%E5%88%87%E9%9D%A2/</guid>
      <description>Spring AOP 详解 一、什么是AOP 文章链接： ​ 你知道Spring AOP创建Proxy的过程吗？ ​ https://zhuanlan.zhihu.com/p/413961861 ​ AOP，即面向切面编程，可以说是OOP（面向对象编</description>
    </item>
    <item>
      <title></title>
      <link>https://borongcheng.github.io/static/tags/mycat%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/tags/mycat%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</guid>
      <description>Mycat 一、读写分离介绍 ​ 随着应用的访问量并发量的增加，应用的读写分离是很有必要的。 应用读写分离至少有两种方法： 应用本身通过代码实现，例如基于动态</description>
    </item>
  </channel>
</rss>
