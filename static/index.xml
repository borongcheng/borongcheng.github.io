<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记网站</title>
    <link>https://borongcheng.github.io/static/</link>
    <description>Recent content on 笔记网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>私有财产</copyright>
    <lastBuildDate>Thu, 07 Dec 2023 16:52:54 +0000</lastBuildDate>
    <atom:link href="https://borongcheng.github.io/static/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>collection</title>
      <link>https://borongcheng.github.io/static/specialized/java/collection/collection/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/specialized/java/collection/collection/</guid>
      <description>collection map是根据key的hashcode函数计算出存入的位置 (h=key.hashcode())^(h&amp;raquo;&amp;gt;16); 1、先是调用key的hashcode函数，计算出对应的32位hash值， 2、再用</description>
    </item>
    <item>
      <title>java基础</title>
      <link>https://borongcheng.github.io/static/specialized/java/base/%E7%89%9B%E5%AE%A2%E7%BD%91java%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/specialized/java/base/%E7%89%9B%E5%AE%A2%E7%BD%91java%E5%9F%BA%E7%A1%80/</guid>
      <description>java基础 JDBC 1、执行对象Statement、PreparedStatement、CallableStatement 三者都是接口 Statem</description>
    </item>
    <item>
      <title>JVM的对象布局--定义</title>
      <link>https://borongcheng.github.io/static/specialized/java/jvm/jvm%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%B8%83%E5%B1%80/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/specialized/java/jvm/jvm%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%B8%83%E5%B1%80/</guid>
      <description>JVM的对象布局&amp;ndash;定义 JVM的设计需要遵循JAVA虚拟机规范，所以在不同的虚拟机上，对象的布局结构基本相同，大小不一定相同。 一、</description>
    </item>
    <item>
      <title>MySQL</title>
      <link>https://borongcheng.github.io/static/specialized/database/relational/mysql/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/specialized/database/relational/mysql/</guid>
      <description>MySQL 术语： 数据库: 数据库是一些关联表的集合。 数据表: 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。 列: 一列(数据元素) 包含了相</description>
    </item>
    <item>
      <title>Redis系统学习</title>
      <link>https://borongcheng.github.io/static/specialized/database/cache/redis%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/specialized/database/cache/redis%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</guid>
      <description>Redis 一、NoSQL的四大分类 K-V键值对： 新浪：Redis 美团：Redis + Tair 阿里、百度：Redis + memecache 文档数据库： MongoDB（必须掌握）</description>
    </item>
    <item>
      <title>家常菜一百八十手</title>
      <link>https://borongcheng.github.io/static/life/%E5%AE%B6%E5%B8%B8%E8%8F%9C%E4%B8%80%E7%99%BE%E5%85%AB%E5%8D%81%E6%89%8B/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/life/%E5%AE%B6%E5%B8%B8%E8%8F%9C%E4%B8%80%E7%99%BE%E5%85%AB%E5%8D%81%E6%89%8B/</guid>
      <description></description>
    </item>
    <item>
      <title>内部类</title>
      <link>https://borongcheng.github.io/static/specialized/java/base/%E5%86%85%E9%83%A8%E7%B1%BB/</link>
      <pubDate>Thu, 07 Dec 2023 16:52:54 +0000</pubDate>
      <guid>https://borongcheng.github.io/static/specialized/java/base/%E5%86%85%E9%83%A8%E7%B1%BB/</guid>
      <description>内部类 内部类：顾名思义，类内部的类； 一、为什么使用内部类 使用内部类最吸引人的原因是：每个内部类都能独立地继承一个（接口的）实现，所以无论外围</description>
    </item>
  </channel>
</rss>
